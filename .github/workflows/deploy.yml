name: Deploy to AWS ECS

on:
  push:
    branches:
      - main  # Trigger deployment on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY }}:latest .
        docker push ${{ secrets.ECR_REPOSITORY }}:latest

    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Register new task definition
      id: register-task
      run: |
        TASK_DEFINITION=$(aws ecs register-task-definition \
          --family ${{ secrets.ECS_TASK_DEFINITION_FAMILY }} \
          --container-definitions '[
            {
              "name": "my-container",
              "image": "${{ secrets.ECR_REPOSITORY }}:latest",
              "memory": 512,
              "cpu": 256,
              "essential": true,
              "portMappings": [
                {
                  "containerPort": 3000,
                  "hostPort": 3000
                }
              ]
            }
          ]' \
          --query 'taskDefinition.taskDefinitionArn' \
          --output text)
        echo "TASK_DEFINITION=$TASK_DEFINITION" >> $GITHUB_ENV

    - name: Update ECS service
      run: |
        aws ecs update-service \
          --cluster ${{ secrets.ECS_CLUSTER }} \
          --service ${{ secrets.ECS_SERVICE }} \
          --task-definition ${{ env.TASK_DEFINITION }} \
          --desired-count 1
